@model IssueTracker.Models.Ticket
@using Microsoft.AspNet.Identity;
@using IssueTracker.Helpers;;


@{
    ViewBag.Title = "Edit";

}


<div class="container">
    <div class="page-inner">
        <div class="col-md-4">
            <div class="card card-dark bg-secondary-gradient">
                <div class="card-body pb-lg-0">
                    <div class="h1 fw-bold float-right"></div>
                    <h1 class="align-middle mb-5">Edit Ticket</h1>
                </div>
            </div>
        </div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.ProjectId)
                @Html.HiddenFor(model => model.SubmitterId)
                @Html.HiddenFor(model => model.Created)

                <div class="form-group">
                    @Html.LabelFor(model => model.Issue, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Issue, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Issue, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IssueDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IssueDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IssueDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TicketPriorityId, "TicketPriorityId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TicketTypeId, "TicketTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketStatusId, "TicketStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DeveloperId, "DeveloperId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("DeveloperId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DeveloperId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Resolved", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsResolved)
                                @Html.ValidationMessageFor(model => model.IsResolved, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Archived", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsArchived)
                                @Html.ValidationMessageFor(model => model.IsArchived, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                }

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success mb-xl-3" />
                        <br />
                        @Html.ActionLink("Back to Ticket Index", "Index")
                    </div>

                </div>
            </div>
        }

    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<footer class="footer">

    <div class="container-fluid">
        <img src="~/Images/TrackIT1.1Light100x40.png" />
        <div class="copyright ml-auto">
            <p>&copy; @DateTime.Now.Year - <a href="//betholmo-portfolio.netlify.app/" target="_blank">Beth Olmo</a></p>
        </div>
    </div>
</footer>