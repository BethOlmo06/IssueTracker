@using Microsoft.AspNet.Identity;
@using IssueTracker.Helpers;
@model IssueTracker.Models.Ticket

@{
    ViewBag.Title = "Dashboard";
    var ticketManager = new TicketManager();
}
<body>
    <div class="container">
        <div class="page-inner">
            <div class="row">
                <div class="col-offset-1 col-10">

                    <p>Project Data</p>
                    <br />
                    <h2>Project Name: @Model.Project.Name</h2>
                    <h4>Project Name: @Model.Project.Created</h4>
                </div>
            </div>
            <div class="row">
                <div class="col-12">

                    <p>Ticket Data</p>
                    <br />
                    <h2>Title: @Model.Issue</h2>
                    <h4>Priority: @Model.TicketPriority.Name</h4>
                    <h4>Status: @Model.TicketStatus.Name</h4>
                    <h4>Type: @Model.TicketType.Name</h4>
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-6">
                    @if (Model.Comments.Count != 0)
                    {
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>
                                        First Name
                                    </th>
                                    <th>
                                        Comment
                                    </th>
                                    <th>
                                        Posted On
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>

                            @foreach (var item in Model.Comments)
                            {
                                <tbody>
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.User.FullName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Comment)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Created)
                                        </td>
                                        <td>
                                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                        </td>
                                    </tr>
                                </tbody>
                            }

                        </table>

                    }
                    else
                    {
                        <h4>No comments have been made for this ticket.</h4>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col">
                    @if (ticketManager.CanMakeComment(Model.Id))
                    {
                        using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <hr />
                            <div class="form-horizontal">
                                <h4>TicketComment</h4>

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.Hidden("TicketId", Model.Id)
                                <div class="form-group">
                                    @Html.Label("Comment", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextArea("Comment", new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
                

                <div class="col">
                    @using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("TicketId", Model.Id)

                        <div class="form-group">
                            @Html.Label("File Name", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.Editor("FileName", new { htmlAttributes = new { @class = "form-control" } })
                                
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextArea("Description", new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Attachment", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <input type="file" name="file" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                <input type="submit" value="Add Attachment" class="btn btn-primary" />
                            </div>
                        </div>

                    }

                    <hr />
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayName("Icon")
                                </th>
                                <th>
                                    @Html.DisplayName("File Name")
                                </th>
                                <th>
                                    @Html.DisplayName("Path")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var attachment in Model.Attachments.ToList()) //Jason has "TicketAttachments" here but I don't have that option. Praying this doesn't break.
                            {

                                <tr>
                                    <td>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => attachment.FileName)
                                    </td>
                                    <td>
                                        <a target="_blank" href="@attachment.FilePath">@attachment.FilePath</a>
                                    </td>
                                </tr>
                            }
                        </tbody>


                    </table>

                </div>
            </div>
        </div>
    </div>
    @section scripts {
        <script>
            // format ALL tables by class selector
            $('.table').DataTable();
        </script>

    }
</body>