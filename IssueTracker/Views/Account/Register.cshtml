@model IssueTracker.Models.ExtendedRegisterViewModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout - Copy.cshtml";
}

<head>
    <!-- Fonts and icons -->
    <script src="~/Scripts/webfont.min.js"></script>
    <script>
        WebFont.load({
            google: { "families": ["Lato:300,400,700,900"] },
            custom: { "families": ["Flaticon", "Font Awesome 5 Solid", "Font Awesome 5 Regular", "Font Awesome 5 Brands", "simple-line-icons"], urls: ["~/Content/fonts.min.css"] },
            active: function () {
                sessionStorage.fonts = true;
            }
        });
    </script>

    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/fonts.css" rel="stylesheet" />
    <link href="~/Content/atlantis.css" rel="stylesheet" />
    <link href="~/Content/atlantis2.css" rel="stylesheet" />

    <title>Register - Issue Tracker | Beth Olmo</title>
</head>

<body class="login">
    <div class="wrapper wrapper-login wrapper-login-full p-0">
        <div class="login-aside w-50 d-flex flex-column align-items-center justify-content-center text-center bg-secondary-gradient-account">
            <h1 class="title fw-bold text-white mb-3">TrackIT</h1>
            <p class="subtitle text-white op-7">Support Ticket tracking and management system.</p>
        </div>
        <div class="login-aside w-50 d-flex align-items-center justify-content-center bg-white">
            <div class="container container-login container-transparent animated fadeIn">
                <h3 class="text-center">Create Your Account</h3>

                <h4 class="font-italic text-center">New users have Read-Only access.</h4>
                <br />
                <div class="login-form">
                    @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <label for="firstName" class="placeholder"><b>First Name</b></label>
                            <input id="firstName" name="firstName" type="text" class="form-control" required>
                        </div>
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <label for="lastName" class="placeholder"><b>Last Name</b></label>
                            <input id="lastName" name="lastName" type="text" class="form-control" required>
                        </div>
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <label for="email" class="placeholder"><b>Email</b></label>
                            <input id="email" name="Email" type="email" class="form-control" required>
                        </div>
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <label for="passwordsignin" class="placeholder"><b>Password</b></label>
                            <div class="position-relative">
                                <input id="passwordsignin" name="Password" type="password" class="form-control" required>
                                <div class="show-password">
                                    <i class="icon-eye"></i>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                        <div class="form-group">
                            <label for="confirmpassword" class="placeholder"><b>Confirm Password</b></label>
                            <div class="position-relative">
                                <input id="confirmpassword" name="confirmpassword" type="password" class="form-control" required>
                                <div class="show-password">
                                    <i class="icon-eye"></i>
                                </div>
                            </div>
                        </div>
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })


                        //This functionality is on hold temporarily, so I can focus on deliverables
                        @*<div class="form-group">
                        @Html.Label("Upload Custom Avatar", htmlAttributes: new { @class = "control-label" })

                    </div>
                    <div class="position-relative">
                        <input type="file" class="form-control-file" id="exampleFormControlFile1">
                    </div>*@

                        <div class="row form-sub mt-xl-4">
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input" name="agree" id="agree">
                                <label class="custom-control-label" for="agree">I Agree the terms and conditions.</label>
                            </div>
                        </div>
                        <div class="row form-action">
                            <div class="col-md-6">
                                <a href="~/Account/Login/" id="show-signin" class="btn btn-danger btn-link w-100 fw-bold">Cancel</a>
                            </div>
                            <div class="col-md-6">
                                <button type="submit" class="btn btn-secondary w-100 fw-bold">Sign Up</button>
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>
    @section Scripts {
        @Scripts.Render("~/Scripts/jquery.3.2.1.min.js")
        @Scripts.Render("~/Scripts/jquery-ui.min.js")
        @Scripts.Render("~/Scripts/popper.min.js")
        @Scripts.Render("~/Scripts/bootstrap.min.js")
        @Scripts.Render("~/Scripts/atlantis.js")
    }

</body>

